Exercise 1.3.  Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers. 

(defn square [x]
    (* x x))

(defn sum-of-squares [x y]
    (+ (square x) (square y)))

(defn sum-squares-larger [x y z]
    (cond (and (< x z) (< x y)) (sum-of-squares y z)
          (and (< y z) (< y x)) (sum-of-squares x z)
          (= 1 1) (sum-of-squares x y)))
